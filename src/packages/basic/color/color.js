parcelRequire = (function (e, r, n, t) { const i = typeof parcelRequire === 'function' && parcelRequire; const o = typeof require === 'function' && require; function u (n, t) { if (!r[n]) { if (!e[n]) { const f = typeof parcelRequire === 'function' && parcelRequire; if (!t && f) return f(n, !0); if (i) return i(n, !0); if (o && typeof n === 'string') return o(n); const c = new Error("Cannot find module '" + n + "'"); throw c.code = 'MODULE_NOT_FOUND', c }p.resolve = function (r) { return e[n][1][r] || r }, p.cache = {}; const l = r[n] = new u.Module(n); e[n][0].call(l.exports, p, l, l.exports, this) } return r[n].exports; function p (e) { return u(p.resolve(e)) } }u.isParcelRequire = !0, u.Module = function (e) { this.id = e, this.bundle = u, this.exports = {} }, u.modules = e, u.cache = r, u.parent = i, u.register = function (r, n) { e[r] = [function (e, r) { r.exports = n }, {}] }; for (let f = 0; f < n.length; f++)u(n[f]); if (n.length) { const c = u(n[n.length - 1]); typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = c : typeof define === 'function' && define.amd ? define(function () { return c }) : t && (this[t] = c) } return u }({
  fN3j: [function (require, module, exports) {
    'use strict'; module.exports = { aliceblue: [240, 248, 255], antiquewhite: [250, 235, 215], aqua: [0, 255, 255], aquamarine: [127, 255, 212], azure: [240, 255, 255], beige: [245, 245, 220], bisque: [255, 228, 196], black: [0, 0, 0], blanchedalmond: [255, 235, 205], blue: [0, 0, 255], blueviolet: [138, 43, 226], brown: [165, 42, 42], burlywood: [222, 184, 135], cadetblue: [95, 158, 160], chartreuse: [127, 255, 0], chocolate: [210, 105, 30], coral: [255, 127, 80], cornflowerblue: [100, 149, 237], cornsilk: [255, 248, 220], crimson: [220, 20, 60], cyan: [0, 255, 255], darkblue: [0, 0, 139], darkcyan: [0, 139, 139], darkgoldenrod: [184, 134, 11], darkgray: [169, 169, 169], darkgreen: [0, 100, 0], darkgrey: [169, 169, 169], darkkhaki: [189, 183, 107], darkmagenta: [139, 0, 139], darkolivegreen: [85, 107, 47], darkorange: [255, 140, 0], darkorchid: [153, 50, 204], darkred: [139, 0, 0], darksalmon: [233, 150, 122], darkseagreen: [143, 188, 143], darkslateblue: [72, 61, 139], darkslategray: [47, 79, 79], darkslategrey: [47, 79, 79], darkturquoise: [0, 206, 209], darkviolet: [148, 0, 211], deeppink: [255, 20, 147], deepskyblue: [0, 191, 255], dimgray: [105, 105, 105], dimgrey: [105, 105, 105], dodgerblue: [30, 144, 255], firebrick: [178, 34, 34], floralwhite: [255, 250, 240], forestgreen: [34, 139, 34], fuchsia: [255, 0, 255], gainsboro: [220, 220, 220], ghostwhite: [248, 248, 255], gold: [255, 215, 0], goldenrod: [218, 165, 32], gray: [128, 128, 128], green: [0, 128, 0], greenyellow: [173, 255, 47], grey: [128, 128, 128], honeydew: [240, 255, 240], hotpink: [255, 105, 180], indianred: [205, 92, 92], indigo: [75, 0, 130], ivory: [255, 255, 240], khaki: [240, 230, 140], lavender: [230, 230, 250], lavenderblush: [255, 240, 245], lawngreen: [124, 252, 0], lemonchiffon: [255, 250, 205], lightblue: [173, 216, 230], lightcoral: [240, 128, 128], lightcyan: [224, 255, 255], lightgoldenrodyellow: [250, 250, 210], lightgray: [211, 211, 211], lightgreen: [144, 238, 144], lightgrey: [211, 211, 211], lightpink: [255, 182, 193], lightsalmon: [255, 160, 122], lightseagreen: [32, 178, 170], lightskyblue: [135, 206, 250], lightslategray: [119, 136, 153], lightslategrey: [119, 136, 153], lightsteelblue: [176, 196, 222], lightyellow: [255, 255, 224], lime: [0, 255, 0], limegreen: [50, 205, 50], linen: [250, 240, 230], magenta: [255, 0, 255], maroon: [128, 0, 0], mediumaquamarine: [102, 205, 170], mediumblue: [0, 0, 205], mediumorchid: [186, 85, 211], mediumpurple: [147, 112, 219], mediumseagreen: [60, 179, 113], mediumslateblue: [123, 104, 238], mediumspringgreen: [0, 250, 154], mediumturquoise: [72, 209, 204], mediumvioletred: [199, 21, 133], midnightblue: [25, 25, 112], mintcream: [245, 255, 250], mistyrose: [255, 228, 225], moccasin: [255, 228, 181], navajowhite: [255, 222, 173], navy: [0, 0, 128], oldlace: [253, 245, 230], olive: [128, 128, 0], olivedrab: [107, 142, 35], orange: [255, 165, 0], orangered: [255, 69, 0], orchid: [218, 112, 214], palegoldenrod: [238, 232, 170], palegreen: [152, 251, 152], paleturquoise: [175, 238, 238], palevioletred: [219, 112, 147], papayawhip: [255, 239, 213], peachpuff: [255, 218, 185], peru: [205, 133, 63], pink: [255, 192, 203], plum: [221, 160, 221], powderblue: [176, 224, 230], purple: [128, 0, 128], rebeccapurple: [102, 51, 153], red: [255, 0, 0], rosybrown: [188, 143, 143], royalblue: [65, 105, 225], saddlebrown: [139, 69, 19], salmon: [250, 128, 114], sandybrown: [244, 164, 96], seagreen: [46, 139, 87], seashell: [255, 245, 238], sienna: [160, 82, 45], silver: [192, 192, 192], skyblue: [135, 206, 235], slateblue: [106, 90, 205], slategray: [112, 128, 144], slategrey: [112, 128, 144], snow: [255, 250, 250], springgreen: [0, 255, 127], steelblue: [70, 130, 180], tan: [210, 180, 140], teal: [0, 128, 128], thistle: [216, 191, 216], tomato: [255, 99, 71], turquoise: [64, 224, 208], violet: [238, 130, 238], wheat: [245, 222, 179], white: [255, 255, 255], whitesmoke: [245, 245, 245], yellow: [255, 255, 0], yellowgreen: [154, 205, 50] }
  }, {}],
  rgTA: [function (require, module, exports) {
    module.exports = function (r) { return !(!r || typeof r === 'string') && (r instanceof Array || Array.isArray(r) || r.length >= 0 && (r.splice instanceof Function || Object.getOwnPropertyDescriptor(r, r.length - 1) && r.constructor.name !== 'String')) }
  }, {}],
  '/kv6': [function (require, module, exports) {
    'use strict'; const r = require('is-arrayish'); const t = Array.prototype.concat; const e = Array.prototype.slice; const a = module.exports = function (a) { for (var n = [], o = 0, u = a.length; o < u; o++) { const c = a[o]; r(c) ? n = t.call(n, e.call(c)) : n.push(c) } return n }; a.wrap = function (r) { return function () { return r(a(arguments)) } }
  }, { 'is-arrayish': 'rgTA' }],
  D16z: [function (require, module, exports) {
    const r = require('color-name'); const t = require('simple-swizzle'); const a = {}; for (const e in r)r.hasOwnProperty(e) && (a[r[e]] = e); const n = module.exports = { to: {}, get: {} }; function s (r, t, a) { return Math.min(Math.max(t, r), a) } function o (r) { const t = r.toString(16).toUpperCase(); return t.length < 2 ? '0' + t : t }n.get = function (r) { let t, a; switch (r.substring(0, 3).toLowerCase()) { case 'hsl':t = n.get.hsl(r), a = 'hsl'; break; case 'hwb':t = n.get.hwb(r), a = 'hwb'; break; default:t = n.get.rgb(r), a = 'rgb' } return t ? { model: a, value: t } : null }, n.get.rgb = function (t) { if (!t) return null; let a; let e; let n; let o = [0, 0, 0, 1]; if (a = t.match(/^#([a-f0-9]{6})([a-f0-9]{2})?$/i)) { for (n = a[2], a = a[1], e = 0; e < 3; e++) { const u = 2 * e; o[e] = parseInt(a.slice(u, u + 2), 16) }n && (o[3] = Math.round(parseInt(n, 16) / 255 * 100) / 100) } else if (a = t.match(/^#([a-f0-9]{3,4})$/i)) { for (n = (a = a[1])[3], e = 0; e < 3; e++)o[e] = parseInt(a[e] + a[e], 16); n && (o[3] = Math.round(parseInt(n + n, 16) / 255 * 100) / 100) } else if (a = t.match(/^rgba?\(\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/)) { for (e = 0; e < 3; e++)o[e] = parseInt(a[e + 1], 0); a[4] && (o[3] = parseFloat(a[4])) } else { if (!(a = t.match(/^rgba?\(\s*([+-]?[\d\.]+)\%\s*,\s*([+-]?[\d\.]+)\%\s*,\s*([+-]?[\d\.]+)\%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/))) return (a = t.match(/(\D+)/)) ? a[1] === 'transparent' ? [0, 0, 0, 0] : (o = r[a[1]]) ? (o[3] = 1, o) : null : null; for (e = 0; e < 3; e++)o[e] = Math.round(2.55 * parseFloat(a[e + 1])); a[4] && (o[3] = parseFloat(a[4])) } for (e = 0; e < 3; e++)o[e] = s(o[e], 0, 255); return o[3] = s(o[3], 0, 1), o }, n.get.hsl = function (r) { if (!r) return null; const t = r.match(/^hsla?\(\s*([+-]?(?:\d*\.)?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/); if (t) { const a = parseFloat(t[4]); return [(parseFloat(t[1]) + 360) % 360, s(parseFloat(t[2]), 0, 100), s(parseFloat(t[3]), 0, 100), s(isNaN(a) ? 1 : a, 0, 1)] } return null }, n.get.hwb = function (r) { if (!r) return null; const t = r.match(/^hwb\(\s*([+-]?\d*[\.]?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/); if (t) { const a = parseFloat(t[4]); return [(parseFloat(t[1]) % 360 + 360) % 360, s(parseFloat(t[2]), 0, 100), s(parseFloat(t[3]), 0, 100), s(isNaN(a) ? 1 : a, 0, 1)] } return null }, n.to.hex = function () { const r = t(arguments); return '#' + o(r[0]) + o(r[1]) + o(r[2]) + (r[3] < 1 ? o(Math.round(255 * r[3])) : '') }, n.to.rgb = function () { const r = t(arguments); return r.length < 4 || r[3] === 1 ? 'rgb(' + Math.round(r[0]) + ', ' + Math.round(r[1]) + ', ' + Math.round(r[2]) + ')' : 'rgba(' + Math.round(r[0]) + ', ' + Math.round(r[1]) + ', ' + Math.round(r[2]) + ', ' + r[3] + ')' }, n.to.rgb.percent = function () { const r = t(arguments); const a = Math.round(r[0] / 255 * 100); const e = Math.round(r[1] / 255 * 100); const n = Math.round(r[2] / 255 * 100); return r.length < 4 || r[3] === 1 ? 'rgb(' + a + '%, ' + e + '%, ' + n + '%)' : 'rgba(' + a + '%, ' + e + '%, ' + n + '%, ' + r[3] + ')' }, n.to.hsl = function () { const r = t(arguments); return r.length < 4 || r[3] === 1 ? 'hsl(' + r[0] + ', ' + r[1] + '%, ' + r[2] + '%)' : 'hsla(' + r[0] + ', ' + r[1] + '%, ' + r[2] + '%, ' + r[3] + ')' }, n.to.hwb = function () { const r = t(arguments); let a = ''; return r.length >= 4 && r[3] !== 1 && (a = ', ' + r[3]), 'hwb(' + r[0] + ', ' + r[1] + '%, ' + r[2] + '%' + a + ')' }, n.to.keyword = function (r) { return a[r.slice(0, 3)] }
  }, { 'color-name': 'fN3j', 'simple-swizzle': '/kv6' }],
  fFbA: [function (require, module, exports) {
    const r = require('color-name'); const n = {}; for (const a in r)r.hasOwnProperty(a) && (n[r[a]] = a); const t = module.exports = { rgb: { channels: 3, labels: 'rgb' }, hsl: { channels: 3, labels: 'hsl' }, hsv: { channels: 3, labels: 'hsv' }, hwb: { channels: 3, labels: 'hwb' }, cmyk: { channels: 4, labels: 'cmyk' }, xyz: { channels: 3, labels: 'xyz' }, lab: { channels: 3, labels: 'lab' }, lch: { channels: 3, labels: 'lch' }, hex: { channels: 1, labels: ['hex'] }, keyword: { channels: 1, labels: ['keyword'] }, ansi16: { channels: 1, labels: ['ansi16'] }, ansi256: { channels: 1, labels: ['ansi256'] }, hcg: { channels: 3, labels: ['h', 'c', 'g'] }, apple: { channels: 3, labels: ['r16', 'g16', 'b16'] }, gray: { channels: 1, labels: ['gray'] } }; for (const e in t) if (t.hasOwnProperty(e)) { if (!('channels' in t[e])) throw new Error('missing channels property: ' + e); if (!('labels' in t[e])) throw new Error('missing channel labels property: ' + e); if (t[e].labels.length !== t[e].channels) throw new Error('channel and label counts mismatch: ' + e); const h = t[e].channels; const u = t[e].labels; delete t[e].channels, delete t[e].labels, Object.defineProperty(t[e], 'channels', { value: h }), Object.defineProperty(t[e], 'labels', { value: u }) } function o (r, n) { return Math.pow(r[0] - n[0], 2) + Math.pow(r[1] - n[1], 2) + Math.pow(r[2] - n[2], 2) }t.rgb.hsl = function (r) { let n; let a; const t = r[0] / 255; const e = r[1] / 255; const h = r[2] / 255; const u = Math.min(t, e, h); const o = Math.max(t, e, h); const c = o - u; return o === u ? n = 0 : t === o ? n = (e - h) / c : e === o ? n = 2 + (h - t) / c : h === o && (n = 4 + (t - e) / c), (n = Math.min(60 * n, 360)) < 0 && (n += 360), a = (u + o) / 2, [n, 100 * (o === u ? 0 : a <= 0.5 ? c / (o + u) : c / (2 - o - u)), 100 * a] }, t.rgb.hsv = function (r) { let n; let a; let t; let e; let h; const u = r[0] / 255; const o = r[1] / 255; const c = r[2] / 255; const s = Math.max(u, o, c); const l = s - Math.min(u, o, c); const i = function (r) { return (s - r) / 6 / l + 0.5 }; return l === 0 ? e = h = 0 : (h = l / s, n = i(u), a = i(o), t = i(c), u === s ? e = t - a : o === s ? e = 1 / 3 + n - t : c === s && (e = 2 / 3 + a - n), e < 0 ? e += 1 : e > 1 && (e -= 1)), [360 * e, 100 * h, 100 * s] }, t.rgb.hwb = function (r) { const n = r[0]; const a = r[1]; let e = r[2]; return [t.rgb.hsl(r)[0], 100 * (1 / 255 * Math.min(n, Math.min(a, e))), 100 * (e = 1 - 1 / 255 * Math.max(n, Math.max(a, e)))] }, t.rgb.cmyk = function (r) { let n; const a = r[0] / 255; const t = r[1] / 255; const e = r[2] / 255; return [100 * ((1 - a - (n = Math.min(1 - a, 1 - t, 1 - e))) / (1 - n) || 0), 100 * ((1 - t - n) / (1 - n) || 0), 100 * ((1 - e - n) / (1 - n) || 0), 100 * n] }, t.rgb.keyword = function (a) { const t = n[a]; if (t) return t; let e; let h = 1 / 0; for (const u in r) if (r.hasOwnProperty(u)) { const c = o(a, r[u]); c < h && (h = c, e = u) } return e }, t.keyword.rgb = function (n) { return r[n] }, t.rgb.xyz = function (r) { let n = r[0] / 255; let a = r[1] / 255; let t = r[2] / 255; return [100 * (0.4124 * (n = n > 0.04045 ? Math.pow((n + 0.055) / 1.055, 2.4) : n / 12.92) + 0.3576 * (a = a > 0.04045 ? Math.pow((a + 0.055) / 1.055, 2.4) : a / 12.92) + 0.1805 * (t = t > 0.04045 ? Math.pow((t + 0.055) / 1.055, 2.4) : t / 12.92)), 100 * (0.2126 * n + 0.7152 * a + 0.0722 * t), 100 * (0.0193 * n + 0.1192 * a + 0.9505 * t)] }, t.rgb.lab = function (r) { const n = t.rgb.xyz(r); let a = n[0]; let e = n[1]; let h = n[2]; return e /= 100, h /= 108.883, a = (a /= 95.047) > 0.008856 ? Math.pow(a, 1 / 3) : 7.787 * a + 16 / 116, [116 * (e = e > 0.008856 ? Math.pow(e, 1 / 3) : 7.787 * e + 16 / 116) - 16, 500 * (a - e), 200 * (e - (h = h > 0.008856 ? Math.pow(h, 1 / 3) : 7.787 * h + 16 / 116))] }, t.hsl.rgb = function (r) { let n; let a; let t; let e; let h; const u = r[0] / 360; const o = r[1] / 100; const c = r[2] / 100; if (o === 0) return [h = 255 * c, h, h]; n = 2 * c - (a = c < 0.5 ? c * (1 + o) : c + o - c * o), e = [0, 0, 0]; for (let s = 0; s < 3; s++)(t = u + 1 / 3 * -(s - 1)) < 0 && t++, t > 1 && t--, h = 6 * t < 1 ? n + 6 * (a - n) * t : 2 * t < 1 ? a : 3 * t < 2 ? n + (a - n) * (2 / 3 - t) * 6 : n, e[s] = 255 * h; return e }, t.hsl.hsv = function (r) { const n = r[0]; let a = r[1] / 100; let t = r[2] / 100; let e = a; const h = Math.max(t, 0.01); return a *= (t *= 2) <= 1 ? t : 2 - t, e *= h <= 1 ? h : 2 - h, [n, 100 * (t === 0 ? 2 * e / (h + e) : 2 * a / (t + a)), 100 * ((t + a) / 2)] }, t.hsv.rgb = function (r) { const n = r[0] / 60; const a = r[1] / 100; let t = r[2] / 100; const e = Math.floor(n) % 6; const h = n - Math.floor(n); const u = 255 * t * (1 - a); const o = 255 * t * (1 - a * h); const c = 255 * t * (1 - a * (1 - h)); switch (t *= 255, e) { case 0:return [t, c, u]; case 1:return [o, t, u]; case 2:return [u, t, c]; case 3:return [u, o, t]; case 4:return [c, u, t]; case 5:return [t, u, o] } }, t.hsv.hsl = function (r) { let n; let a; let t; const e = r[0]; const h = r[1] / 100; const u = r[2] / 100; const o = Math.max(u, 0.01); return t = (2 - h) * u, a = h * o, [e, 100 * (a = (a /= (n = (2 - h) * o) <= 1 ? n : 2 - n) || 0), 100 * (t /= 2)] }, t.hwb.rgb = function (r) { let n; let a; let t; let e; let h; let u; let o; const c = r[0] / 360; let s = r[1] / 100; let l = r[2] / 100; const i = s + l; switch (i > 1 && (s /= i, l /= i), t = 6 * c - (n = Math.floor(6 * c)), (1 & n) != 0 && (t = 1 - t), e = s + t * ((a = 1 - l) - s), n) { default:case 6:case 0:h = a, u = e, o = s; break; case 1:h = e, u = a, o = s; break; case 2:h = s, u = a, o = e; break; case 3:h = s, u = e, o = a; break; case 4:h = e, u = s, o = a; break; case 5:h = a, u = s, o = e } return [255 * h, 255 * u, 255 * o] }, t.cmyk.rgb = function (r) { const n = r[0] / 100; const a = r[1] / 100; const t = r[2] / 100; const e = r[3] / 100; return [255 * (1 - Math.min(1, n * (1 - e) + e)), 255 * (1 - Math.min(1, a * (1 - e) + e)), 255 * (1 - Math.min(1, t * (1 - e) + e))] }, t.xyz.rgb = function (r) { let n; let a; let t; const e = r[0] / 100; const h = r[1] / 100; const u = r[2] / 100; return a = -0.9689 * e + 1.8758 * h + 0.0415 * u, t = 0.0557 * e + -0.204 * h + 1.057 * u, n = (n = 3.2406 * e + -1.5372 * h + -0.4986 * u) > 0.0031308 ? 1.055 * Math.pow(n, 1 / 2.4) - 0.055 : 12.92 * n, a = a > 0.0031308 ? 1.055 * Math.pow(a, 1 / 2.4) - 0.055 : 12.92 * a, t = t > 0.0031308 ? 1.055 * Math.pow(t, 1 / 2.4) - 0.055 : 12.92 * t, [255 * (n = Math.min(Math.max(0, n), 1)), 255 * (a = Math.min(Math.max(0, a), 1)), 255 * (t = Math.min(Math.max(0, t), 1))] }, t.xyz.lab = function (r) { let n = r[0]; let a = r[1]; let t = r[2]; return a /= 100, t /= 108.883, n = (n /= 95.047) > 0.008856 ? Math.pow(n, 1 / 3) : 7.787 * n + 16 / 116, [116 * (a = a > 0.008856 ? Math.pow(a, 1 / 3) : 7.787 * a + 16 / 116) - 16, 500 * (n - a), 200 * (a - (t = t > 0.008856 ? Math.pow(t, 1 / 3) : 7.787 * t + 16 / 116))] }, t.lab.xyz = function (r) { let n; let a; let t; const e = r[0]; n = r[1] / 500 + (a = (e + 16) / 116), t = a - r[2] / 200; const h = Math.pow(a, 3); const u = Math.pow(n, 3); const o = Math.pow(t, 3); return a = h > 0.008856 ? h : (a - 16 / 116) / 7.787, n = u > 0.008856 ? u : (n - 16 / 116) / 7.787, t = o > 0.008856 ? o : (t - 16 / 116) / 7.787, [n *= 95.047, a *= 100, t *= 108.883] }, t.lab.lch = function (r) { let n; const a = r[0]; const t = r[1]; const e = r[2]; return (n = 360 * Math.atan2(e, t) / 2 / Math.PI) < 0 && (n += 360), [a, Math.sqrt(t * t + e * e), n] }, t.lch.lab = function (r) { let n; const a = r[0]; const t = r[1]; return n = r[2] / 360 * 2 * Math.PI, [a, t * Math.cos(n), t * Math.sin(n)] }, t.rgb.ansi16 = function (r) { const n = r[0]; const a = r[1]; const e = r[2]; let h = 1 in arguments ? arguments[1] : t.rgb.hsv(r)[2]; if ((h = Math.round(h / 50)) === 0) return 30; let u = 30 + (Math.round(e / 255) << 2 | Math.round(a / 255) << 1 | Math.round(n / 255)); return h === 2 && (u += 60), u }, t.hsv.ansi16 = function (r) { return t.rgb.ansi16(t.hsv.rgb(r), r[2]) }, t.rgb.ansi256 = function (r) { const n = r[0]; const a = r[1]; const t = r[2]; return n === a && a === t ? n < 8 ? 16 : n > 248 ? 231 : Math.round((n - 8) / 247 * 24) + 232 : 16 + 36 * Math.round(n / 255 * 5) + 6 * Math.round(a / 255 * 5) + Math.round(t / 255 * 5) }, t.ansi16.rgb = function (r) { let n = r % 10; if (n === 0 || n === 7) return r > 50 && (n += 3.5), [n = n / 10.5 * 255, n, n]; const a = 0.5 * (1 + ~~(r > 50)); return [(1 & n) * a * 255, (n >> 1 & 1) * a * 255, (n >> 2 & 1) * a * 255] }, t.ansi256.rgb = function (r) { if (r >= 232) { const n = 10 * (r - 232) + 8; return [n, n, n] } let a; return r -= 16, [Math.floor(r / 36) / 5 * 255, Math.floor((a = r % 36) / 6) / 5 * 255, a % 6 / 5 * 255] }, t.rgb.hex = function (r) { const n = (((255 & Math.round(r[0])) << 16) + ((255 & Math.round(r[1])) << 8) + (255 & Math.round(r[2]))).toString(16).toUpperCase(); return '000000'.substring(n.length) + n }, t.hex.rgb = function (r) { const n = r.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i); if (!n) return [0, 0, 0]; let a = n[0]; n[0].length === 3 && (a = a.split('').map(function (r) { return r + r }).join('')); const t = parseInt(a, 16); return [t >> 16 & 255, t >> 8 & 255, 255 & t] }, t.rgb.hcg = function (r) { let n; const a = r[0] / 255; const t = r[1] / 255; const e = r[2] / 255; const h = Math.max(Math.max(a, t), e); const u = Math.min(Math.min(a, t), e); const o = h - u; return n = o <= 0 ? 0 : h === a ? (t - e) / o % 6 : h === t ? 2 + (e - a) / o : 4 + (a - t) / o + 4, n /= 6, [360 * (n %= 1), 100 * o, 100 * (o < 1 ? u / (1 - o) : 0)] }, t.hsl.hcg = function (r) { const n = r[1] / 100; const a = r[2] / 100; let t = 1; let e = 0; return (t = a < 0.5 ? 2 * n * a : 2 * n * (1 - a)) < 1 && (e = (a - 0.5 * t) / (1 - t)), [r[0], 100 * t, 100 * e] }, t.hsv.hcg = function (r) { const n = r[1] / 100; const a = r[2] / 100; const t = n * a; let e = 0; return t < 1 && (e = (a - t) / (1 - t)), [r[0], 100 * t, 100 * e] }, t.hcg.rgb = function (r) { const n = r[0] / 360; const a = r[1] / 100; const t = r[2] / 100; if (a === 0) return [255 * t, 255 * t, 255 * t]; let e; const h = [0, 0, 0]; const u = n % 1 * 6; const o = u % 1; const c = 1 - o; switch (Math.floor(u)) { case 0:h[0] = 1, h[1] = o, h[2] = 0; break; case 1:h[0] = c, h[1] = 1, h[2] = 0; break; case 2:h[0] = 0, h[1] = 1, h[2] = o; break; case 3:h[0] = 0, h[1] = c, h[2] = 1; break; case 4:h[0] = o, h[1] = 0, h[2] = 1; break; default:h[0] = 1, h[1] = 0, h[2] = c } return e = (1 - a) * t, [255 * (a * h[0] + e), 255 * (a * h[1] + e), 255 * (a * h[2] + e)] }, t.hcg.hsv = function (r) { const n = r[1] / 100; const a = n + r[2] / 100 * (1 - n); let t = 0; return a > 0 && (t = n / a), [r[0], 100 * t, 100 * a] }, t.hcg.hsl = function (r) { const n = r[1] / 100; const a = r[2] / 100 * (1 - n) + 0.5 * n; let t = 0; return a > 0 && a < 0.5 ? t = n / (2 * a) : a >= 0.5 && a < 1 && (t = n / (2 * (1 - a))), [r[0], 100 * t, 100 * a] }, t.hcg.hwb = function (r) { const n = r[1] / 100; const a = n + r[2] / 100 * (1 - n); return [r[0], 100 * (a - n), 100 * (1 - a)] }, t.hwb.hcg = function (r) { const n = r[1] / 100; const a = 1 - r[2] / 100; const t = a - n; let e = 0; return t < 1 && (e = (a - t) / (1 - t)), [r[0], 100 * t, 100 * e] }, t.apple.rgb = function (r) { return [r[0] / 65535 * 255, r[1] / 65535 * 255, r[2] / 65535 * 255] }, t.rgb.apple = function (r) { return [r[0] / 255 * 65535, r[1] / 255 * 65535, r[2] / 255 * 65535] }, t.gray.rgb = function (r) { return [r[0] / 100 * 255, r[0] / 100 * 255, r[0] / 100 * 255] }, t.gray.hsl = t.gray.hsv = function (r) { return [0, 0, r[0]] }, t.gray.hwb = function (r) { return [0, 100, r[0]] }, t.gray.cmyk = function (r) { return [0, 0, 0, r[0]] }, t.gray.lab = function (r) { return [r[0], 0, 0] }, t.gray.hex = function (r) { const n = 255 & Math.round(r[0] / 100 * 255); const a = ((n << 16) + (n << 8) + n).toString(16).toUpperCase(); return '000000'.substring(a.length) + a }, t.rgb.gray = function (r) { return [(r[0] + r[1] + r[2]) / 3 / 255 * 100] }
  }, { 'color-name': 'fN3j' }],
  fg2k: [function (require, module, exports) {
    const n = require('./conversions'); function r () { for (var r = {}, e = Object.keys(n), t = e.length, a = 0; a < t; a++)r[e[a]] = { distance: -1, parent: null }; return r } function e (e) { const t = r(); const a = [e]; for (t[e].distance = 0; a.length;) for (let o = a.pop(), u = Object.keys(n[o]), c = u.length, i = 0; i < c; i++) { const s = u[i]; const f = t[s]; f.distance === -1 && (f.distance = t[o].distance + 1, f.parent = o, a.unshift(s)) } return t } function t (n, r) { return function (e) { return r(n(e)) } } function a (r, e) { for (var a = [e[r].parent, r], o = n[e[r].parent][r], u = e[r].parent; e[u].parent;)a.unshift(e[u].parent), o = t(n[e[u].parent][u], o), u = e[u].parent; return o.conversion = a, o }module.exports = function (n) { for (var r = e(n), t = {}, o = Object.keys(r), u = o.length, c = 0; c < u; c++) { const i = o[c]; r[i].parent !== null && (t[i] = a(i, r)) } return t }
  }, { './conversions': 'fFbA' }],
  PawV: [function (require, module, exports) {
    const e = require('./conversions'); const n = require('./route'); const r = {}; const o = Object.keys(e); function t (e) { const n = function (n) { return n == null ? n : (arguments.length > 1 && (n = Array.prototype.slice.call(arguments)), e(n)) }; return 'conversion' in e && (n.conversion = e.conversion), n } function c (e) { const n = function (n) { if (n == null) return n; arguments.length > 1 && (n = Array.prototype.slice.call(arguments)); const r = e(n); if (typeof r === 'object') for (let o = r.length, t = 0; t < o; t++)r[t] = Math.round(r[t]); return r }; return 'conversion' in e && (n.conversion = e.conversion), n }o.forEach(function (o) { r[o] = {}, Object.defineProperty(r[o], 'channels', { value: e[o].channels }), Object.defineProperty(r[o], 'labels', { value: e[o].labels }); const i = n(o); Object.keys(i).forEach(function (e) { const n = i[e]; r[o][e] = c(n), r[o][e].raw = t(n) }) }), module.exports = r
  }, { './conversions': 'fFbA', './route': 'fg2k' }],
  Focm: [function (require, module, exports) {
    'use strict'; const r = require('color-string'); const t = require('color-convert'); const o = [].slice; const n = ['keyword', 'gray', 'hex']; const e = {}; Object.keys(t).forEach(function (r) { e[o.call(t[r].labels).sort().join('')] = r }); const i = {}; function a (h, l) { if (!(this instanceof a)) return new a(h, l); if (l && l in n && (l = null), l && !(l in t)) throw new Error('Unknown model: ' + l); let s, c; if (void 0 === h) this.model = 'rgb', this.color = [0, 0, 0], this.valpha = 1; else if (h instanceof a) this.model = h.model, this.color = h.color.slice(), this.valpha = h.valpha; else if (typeof h === 'string') { const u = r.get(h); if (u === null) throw new Error('Unable to parse color from string: ' + h); this.model = u.model, c = t[this.model].channels, this.color = u.value.slice(0, c), this.valpha = typeof u.value[c] === 'number' ? u.value[c] : 1 } else if (h.length) { this.model = l || 'rgb', c = t[this.model].channels; const v = o.call(h, 0, c); this.color = f(v, c), this.valpha = typeof h[c] === 'number' ? h[c] : 1 } else if (typeof h === 'number')h &= 16777215, this.model = 'rgb', this.color = [h >> 16 & 255, h >> 8 & 255, 255 & h], this.valpha = 1; else { this.valpha = 1; const p = Object.keys(h); 'alpha' in h && (p.splice(p.indexOf('alpha'), 1), this.valpha = typeof h.alpha === 'number' ? h.alpha : 0); const b = p.sort().join(''); if (!(b in e)) throw new Error('Unable to parse color from object: ' + JSON.stringify(h)); this.model = e[b]; const m = t[this.model].labels; const g = []; for (s = 0; s < m.length; s++)g.push(h[m[s]]); this.color = f(g) } if (i[this.model]) for (c = t[this.model].channels, s = 0; s < c; s++) { const d = i[this.model][s]; d && (this.color[s] = d(this.color[s])) } this.valpha = Math.max(0, Math.min(1, this.valpha)), Object.freeze && Object.freeze(this) } function h (r, t) { return Number(r.toFixed(t)) } function l (r) { return function (t) { return h(t, r) } } function s (r, t, o) { return (r = Array.isArray(r) ? r : [r]).forEach(function (r) { (i[r] || (i[r] = []))[t] = o }), r = r[0], function (n) { let e; return arguments.length ? (o && (n = o(n)), (e = this[r]()).color[t] = n, e) : (e = this[r]().color[t], o && (e = o(e)), e) } } function c (r) { return function (t) { return Math.max(0, Math.min(r, t)) } } function u (r) { return Array.isArray(r) ? r : [r] } function f (r, t) { for (let o = 0; o < t; o++) typeof r[o] !== 'number' && (r[o] = 0); return r }a.prototype = { toString: function () { return this.string() }, toJSON: function () { return this[this.model]() }, string: function (t) { let o = this.model in r.to ? this : this.rgb(); const n = (o = o.round(typeof t === 'number' ? t : 1)).valpha === 1 ? o.color : o.color.concat(this.valpha); return r.to[o.model](n) }, percentString: function (t) { const o = this.rgb().round(typeof t === 'number' ? t : 1); const n = o.valpha === 1 ? o.color : o.color.concat(this.valpha); return r.to.rgb.percent(n) }, array: function () { return this.valpha === 1 ? this.color.slice() : this.color.concat(this.valpha) }, object: function () { for (var r = {}, o = t[this.model].channels, n = t[this.model].labels, e = 0; e < o; e++)r[n[e]] = this.color[e]; return this.valpha !== 1 && (r.alpha = this.valpha), r }, unitArray: function () { const r = this.rgb().color; return r[0] /= 255, r[1] /= 255, r[2] /= 255, this.valpha !== 1 && r.push(this.valpha), r }, unitObject: function () { const r = this.rgb().object(); return r.r /= 255, r.g /= 255, r.b /= 255, this.valpha !== 1 && (r.alpha = this.valpha), r }, round: function (r) { return r = Math.max(r || 0, 0), new a(this.color.map(l(r)).concat(this.valpha), this.model) }, alpha: function (r) { return arguments.length ? new a(this.color.concat(Math.max(0, Math.min(1, r))), this.model) : this.valpha }, red: s('rgb', 0, c(255)), green: s('rgb', 1, c(255)), blue: s('rgb', 2, c(255)), hue: s(['hsl', 'hsv', 'hsl', 'hwb', 'hcg'], 0, function (r) { return (r % 360 + 360) % 360 }), saturationl: s('hsl', 1, c(100)), lightness: s('hsl', 2, c(100)), saturationv: s('hsv', 1, c(100)), value: s('hsv', 2, c(100)), chroma: s('hcg', 1, c(100)), gray: s('hcg', 2, c(100)), white: s('hwb', 1, c(100)), wblack: s('hwb', 2, c(100)), cyan: s('cmyk', 0, c(100)), magenta: s('cmyk', 1, c(100)), yellow: s('cmyk', 2, c(100)), black: s('cmyk', 3, c(100)), x: s('xyz', 0, c(100)), y: s('xyz', 1, c(100)), z: s('xyz', 2, c(100)), l: s('lab', 0, c(100)), a: s('lab', 1), b: s('lab', 2), keyword: function (r) { return arguments.length ? new a(r) : t[this.model].keyword(this.color) }, hex: function (t) { return arguments.length ? new a(t) : r.to.hex(this.rgb().round().color) }, rgbNumber: function () { const r = this.rgb().color; return (255 & r[0]) << 16 | (255 & r[1]) << 8 | 255 & r[2] }, luminosity: function () { for (var r = this.rgb().color, t = [], o = 0; o < r.length; o++) { const n = r[o] / 255; t[o] = n <= 0.03928 ? n / 12.92 : Math.pow((n + 0.055) / 1.055, 2.4) } return 0.2126 * t[0] + 0.7152 * t[1] + 0.0722 * t[2] }, contrast: function (r) { const t = this.luminosity(); const o = r.luminosity(); return t > o ? (t + 0.05) / (o + 0.05) : (o + 0.05) / (t + 0.05) }, level: function (r) { const t = this.contrast(r); return t >= 7.1 ? 'AAA' : t >= 4.5 ? 'AA' : '' }, isDark: function () { const r = this.rgb().color; return (299 * r[0] + 587 * r[1] + 114 * r[2]) / 1e3 < 128 }, isLight: function () { return !this.isDark() }, negate: function () { for (var r = this.rgb(), t = 0; t < 3; t++)r.color[t] = 255 - r.color[t]; return r }, lighten: function (r) { const t = this.hsl(); return t.color[2] += t.color[2] * r, t }, darken: function (r) { const t = this.hsl(); return t.color[2] -= t.color[2] * r, t }, saturate: function (r) { const t = this.hsl(); return t.color[1] += t.color[1] * r, t }, desaturate: function (r) { const t = this.hsl(); return t.color[1] -= t.color[1] * r, t }, whiten: function (r) { const t = this.hwb(); return t.color[1] += t.color[1] * r, t }, blacken: function (r) { const t = this.hwb(); return t.color[2] += t.color[2] * r, t }, grayscale: function () { const r = this.rgb().color; const t = 0.3 * r[0] + 0.59 * r[1] + 0.11 * r[2]; return a.rgb(t, t, t) }, fade: function (r) { return this.alpha(this.valpha - this.valpha * r) }, opaquer: function (r) { return this.alpha(this.valpha + this.valpha * r) }, rotate: function (r) { const t = this.hsl(); let o = t.color[0]; return o = (o = (o + r) % 360) < 0 ? 360 + o : o, t.color[0] = o, t }, mix: function (r, t) { const o = r.rgb(); const n = this.rgb(); const e = void 0 === t ? 0.5 : t; const i = 2 * e - 1; const h = o.alpha() - n.alpha(); const l = ((i * h == -1 ? i : (i + h) / (1 + i * h)) + 1) / 2; const s = 1 - l; return a.rgb(l * o.red() + s * n.red(), l * o.green() + s * n.green(), l * o.blue() + s * n.blue(), o.alpha() * e + n.alpha() * (1 - e)) } }, Object.keys(t).forEach(function (r) { if (n.indexOf(r) === -1) { const e = t[r].channels; a.prototype[r] = function () { if (this.model === r) return new a(this); if (arguments.length) return new a(arguments, r); const o = typeof arguments[e] === 'number' ? e : this.valpha; return new a(u(t[this.model][r].raw(this.color)).concat(o), r) }, a[r] = function (t) { return typeof t === 'number' && (t = f(o.call(arguments), e)), new a(t, r) } } }), module.exports = a
  }, { 'color-string': 'D16z', 'color-convert': 'PawV' }]
}, {}, ['Focm'], null))
